/****************************************************************************
** Meta object code from reading C++ file 'openscad_interface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.12.8)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "openscad_interface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'openscad_interface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.12.8. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_OrgOpenscadOpenSCADInterface_t {
    QByteArrayData data[22];
    char stringdata0[252];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OrgOpenscadOpenSCADInterface_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OrgOpenscadOpenSCADInterface_t qt_meta_stringdata_OrgOpenscadOpenSCADInterface = {
    {
QT_MOC_LITERAL(0, 0, 28), // "OrgOpenscadOpenSCADInterface"
QT_MOC_LITERAL(1, 29, 6), // "action"
QT_MOC_LITERAL(2, 36, 19), // "QDBusPendingReply<>"
QT_MOC_LITERAL(3, 56, 0), // ""
QT_MOC_LITERAL(4, 57, 4), // "name"
QT_MOC_LITERAL(5, 62, 11), // "buttonPress"
QT_MOC_LITERAL(6, 74, 3), // "idx"
QT_MOC_LITERAL(7, 78, 10), // "getActions"
QT_MOC_LITERAL(8, 89, 30), // "QDBusPendingReply<QStringList>"
QT_MOC_LITERAL(9, 120, 11), // "getRotation"
QT_MOC_LITERAL(10, 132, 33), // "QDBusPendingReply<QList<doubl..."
QT_MOC_LITERAL(11, 166, 14), // "getTranslation"
QT_MOC_LITERAL(12, 181, 6), // "rotate"
QT_MOC_LITERAL(13, 188, 1), // "x"
QT_MOC_LITERAL(14, 190, 1), // "y"
QT_MOC_LITERAL(15, 192, 1), // "z"
QT_MOC_LITERAL(16, 194, 14), // "rotateByVector"
QT_MOC_LITERAL(17, 209, 8), // "rotateTo"
QT_MOC_LITERAL(18, 218, 9), // "translate"
QT_MOC_LITERAL(19, 228, 11), // "translateTo"
QT_MOC_LITERAL(20, 240, 4), // "zoom"
QT_MOC_LITERAL(21, 245, 6) // "zoomTo"

    },
    "OrgOpenscadOpenSCADInterface\0action\0"
    "QDBusPendingReply<>\0\0name\0buttonPress\0"
    "idx\0getActions\0QDBusPendingReply<QStringList>\0"
    "getRotation\0QDBusPendingReply<QList<double> >\0"
    "getTranslation\0rotate\0x\0y\0z\0rotateByVector\0"
    "rotateTo\0translate\0translateTo\0zoom\0"
    "zoomTo"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OrgOpenscadOpenSCADInterface[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      12,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   74,    3, 0x0a /* Public */,
       5,    1,   77,    3, 0x0a /* Public */,
       7,    0,   80,    3, 0x0a /* Public */,
       9,    0,   81,    3, 0x0a /* Public */,
      11,    0,   82,    3, 0x0a /* Public */,
      12,    3,   83,    3, 0x0a /* Public */,
      16,    3,   90,    3, 0x0a /* Public */,
      17,    3,   97,    3, 0x0a /* Public */,
      18,    3,  104,    3, 0x0a /* Public */,
      19,    3,  111,    3, 0x0a /* Public */,
      20,    1,  118,    3, 0x0a /* Public */,
      21,    1,  121,    3, 0x0a /* Public */,

 // slots: parameters
    0x80000000 | 2, QMetaType::QString,    4,
    0x80000000 | 2, QMetaType::UInt,    6,
    0x80000000 | 8,
    0x80000000 | 10,
    0x80000000 | 10,
    0x80000000 | 2, QMetaType::Double, QMetaType::Double, QMetaType::Double,   13,   14,   15,
    0x80000000 | 2, QMetaType::Double, QMetaType::Double, QMetaType::Double,   13,   14,   15,
    0x80000000 | 2, QMetaType::Double, QMetaType::Double, QMetaType::Double,   13,   14,   15,
    0x80000000 | 2, QMetaType::Double, QMetaType::Double, QMetaType::Double,   13,   14,   15,
    0x80000000 | 2, QMetaType::Double, QMetaType::Double, QMetaType::Double,   13,   14,   15,
    0x80000000 | 2, QMetaType::Double,   20,
    0x80000000 | 2, QMetaType::Double,   20,

       0        // eod
};

void OrgOpenscadOpenSCADInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<OrgOpenscadOpenSCADInterface *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: { QDBusPendingReply<> _r = _t->action((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 1: { QDBusPendingReply<> _r = _t->buttonPress((*reinterpret_cast< uint(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 2: { QDBusPendingReply<QStringList> _r = _t->getActions();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 3: { QDBusPendingReply<QList<double> > _r = _t->getRotation();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<double> >*>(_a[0]) = std::move(_r); }  break;
        case 4: { QDBusPendingReply<QList<double> > _r = _t->getTranslation();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<double> >*>(_a[0]) = std::move(_r); }  break;
        case 5: { QDBusPendingReply<> _r = _t->rotate((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 6: { QDBusPendingReply<> _r = _t->rotateByVector((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 7: { QDBusPendingReply<> _r = _t->rotateTo((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 8: { QDBusPendingReply<> _r = _t->translate((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 9: { QDBusPendingReply<> _r = _t->translateTo((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 10: { QDBusPendingReply<> _r = _t->zoom((*reinterpret_cast< double(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 11: { QDBusPendingReply<> _r = _t->zoomTo((*reinterpret_cast< double(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject OrgOpenscadOpenSCADInterface::staticMetaObject = { {
    &QDBusAbstractInterface::staticMetaObject,
    qt_meta_stringdata_OrgOpenscadOpenSCADInterface.data,
    qt_meta_data_OrgOpenscadOpenSCADInterface,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *OrgOpenscadOpenSCADInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OrgOpenscadOpenSCADInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OrgOpenscadOpenSCADInterface.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int OrgOpenscadOpenSCADInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 12)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 12;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 12)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 12;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
