/****************************************************************************
** Meta object code from reading C++ file 'openscad_adaptor.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.12.8)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "openscad_adaptor.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'openscad_adaptor.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.12.8. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_OpenSCADAdaptor_t {
    QByteArrayData data[24];
    char stringdata0[2355];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OpenSCADAdaptor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OpenSCADAdaptor_t qt_meta_stringdata_OpenSCADAdaptor = {
    {
QT_MOC_LITERAL(0, 0, 15), // "OpenSCADAdaptor"
QT_MOC_LITERAL(1, 16, 15), // "D-Bus Interface"
QT_MOC_LITERAL(2, 32, 21), // "org.openscad.OpenSCAD"
QT_MOC_LITERAL(3, 54, 19), // "D-Bus Introspection"
QT_MOC_LITERAL(4, 74, 2128), // "  <interface name=\"org.opens..."
QT_MOC_LITERAL(5, 1982, 6), // "action"
QT_MOC_LITERAL(6, 1989, 0), // ""
QT_MOC_LITERAL(7, 1990, 4), // "name"
QT_MOC_LITERAL(8, 1995, 11), // "buttonPress"
QT_MOC_LITERAL(9, 2007, 3), // "idx"
QT_MOC_LITERAL(10, 2011, 10), // "getActions"
QT_MOC_LITERAL(11, 2022, 11), // "getRotation"
QT_MOC_LITERAL(12, 2034, 13), // "QList<double>"
QT_MOC_LITERAL(13, 2048, 14), // "getTranslation"
QT_MOC_LITERAL(14, 2063, 6), // "rotate"
QT_MOC_LITERAL(15, 2070, 1), // "x"
QT_MOC_LITERAL(16, 2072, 1), // "y"
QT_MOC_LITERAL(17, 2074, 1), // "z"
QT_MOC_LITERAL(18, 2076, 14), // "rotateByVector"
QT_MOC_LITERAL(19, 2091, 8), // "rotateTo"
QT_MOC_LITERAL(20, 2100, 9), // "translate"
QT_MOC_LITERAL(21, 2110, 11), // "translateTo"
QT_MOC_LITERAL(22, 2122, 4), // "zoom"
QT_MOC_LITERAL(23, 2127, 6) // "zoomTo"

    },
    "OpenSCADAdaptor\0D-Bus Interface\0"
    "org.openscad.OpenSCAD\0D-Bus Introspection\0"
    "  <interface name=\"org.openscad.OpenSCAD\">\n    <method name=\"zoom\""
    ">\n      <arg direction=\"in\" type=\"d\" name=\"zoom\"/>\n    </metho"
    "d>\n    <method name=\"zoomTo\">\n      <arg direction=\"in\" type=\"d"
    "\" name=\"zoom\"/>\n    </method>\n    <method name=\"rotate\">\n     "
    " <arg direction=\"in\" type=\"d\" name=\"x\"/>\n      <arg direction=\""
    "in\" type=\"d\" name=\"y\"/>\n      <arg direction=\"in\" type=\"d\" n"
    "ame=\"z\"/>\n    </method>\n    <method name=\"rotateTo\">\n      <arg"
    " direction=\"in\" type=\"d\" name=\"x\"/>\n      <arg direction=\"in\""
    " type=\"d\" name=\"y\"/>\n      <arg direction=\"in\" type=\"d\" name="
    "\"z\"/>\n    </method>\n    <method name=\"rotateByVector\">\n      <a"
    "rg direction=\"in\" type=\"d\" name=\"x\"/>\n      <arg direction=\"in"
    "\" type=\"d\" name=\"y\"/>\n      <arg direction=\"in\" type=\"d\" nam"
    "e=\"z\"/>\n    </method>\n    <method name=\"translate\">\n      <arg "
    "direction=\"in\" type=\"d\" name=\"x\"/>\n      <arg direction=\"in\" "
    "type=\"d\" name=\"y\"/>\n      <arg direction=\"in\" type=\"d\" name=\""
    "z\"/>\n    </method>\n    <method name=\"translateTo\">\n      <arg di"
    "rection=\"in\" type=\"d\" name=\"x\"/>\n      <arg direction=\"in\" ty"
    "pe=\"d\" name=\"y\"/>\n      <arg direction=\"in\" type=\"d\" name=\"z"
    "\"/>\n    </method>\n    <method name=\"action\">\n      <arg directio"
    "n=\"in\" type=\"s\" name=\"name\"/>\n    </method>\n    <method name=\""
    "buttonPress\">\n      <arg direction=\"in\" type=\"u\" name=\"idx\"/>\n"
    "    </method>\n    <method name=\"getRotation\">\n      <annotation va"
    "lue=\"QList&lt;double&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.Out"
    "0\"/>\n      <arg direction=\"out\" type=\"ad\" name=\"rotation\"/>\n "
    "   </method>\n    <method name=\"getTranslation\">\n      <annotation "
    "value=\"QList&lt;double&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.O"
    "ut0\"/>\n      <arg direction=\"out\" type=\"ad\" name=\"rotation\"/>\n"
    "    </method>\n    <method name=\"getActions\">\n      <arg direction="
    "\"out\" type=\"as\" name=\"names\"/>\n      <annotation value=\"QStrin"
    "gList&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n    </met"
    "hod>\n  </interface>\n\0"
    "action\0\0name\0buttonPress\0idx\0getActions\0"
    "getRotation\0QList<double>\0getTranslation\0"
    "rotate\0x\0y\0z\0rotateByVector\0rotateTo\0"
    "translate\0translateTo\0zoom\0zoomTo"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OpenSCADAdaptor[] = {

 // content:
       8,       // revision
       0,       // classname
       2,   14, // classinfo
      12,   18, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // classinfo: key, value
       1,    2,
       3,    4,

 // slots: name, argc, parameters, tag, flags
       5,    1,   78,    6, 0x0a /* Public */,
       8,    1,   81,    6, 0x0a /* Public */,
      10,    0,   84,    6, 0x0a /* Public */,
      11,    0,   85,    6, 0x0a /* Public */,
      13,    0,   86,    6, 0x0a /* Public */,
      14,    3,   87,    6, 0x0a /* Public */,
      18,    3,   94,    6, 0x0a /* Public */,
      19,    3,  101,    6, 0x0a /* Public */,
      20,    3,  108,    6, 0x0a /* Public */,
      21,    3,  115,    6, 0x0a /* Public */,
      22,    1,  122,    6, 0x0a /* Public */,
      23,    1,  125,    6, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::QString,    7,
    QMetaType::Void, QMetaType::UInt,    9,
    QMetaType::QStringList,
    0x80000000 | 12,
    0x80000000 | 12,
    QMetaType::Void, QMetaType::Double, QMetaType::Double, QMetaType::Double,   15,   16,   17,
    QMetaType::Void, QMetaType::Double, QMetaType::Double, QMetaType::Double,   15,   16,   17,
    QMetaType::Void, QMetaType::Double, QMetaType::Double, QMetaType::Double,   15,   16,   17,
    QMetaType::Void, QMetaType::Double, QMetaType::Double, QMetaType::Double,   15,   16,   17,
    QMetaType::Void, QMetaType::Double, QMetaType::Double, QMetaType::Double,   15,   16,   17,
    QMetaType::Void, QMetaType::Double,   22,
    QMetaType::Void, QMetaType::Double,   22,

       0        // eod
};

void OpenSCADAdaptor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<OpenSCADAdaptor *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->action((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 1: _t->buttonPress((*reinterpret_cast< uint(*)>(_a[1]))); break;
        case 2: { QStringList _r = _t->getActions();
            if (_a[0]) *reinterpret_cast< QStringList*>(_a[0]) = std::move(_r); }  break;
        case 3: { QList<double> _r = _t->getRotation();
            if (_a[0]) *reinterpret_cast< QList<double>*>(_a[0]) = std::move(_r); }  break;
        case 4: { QList<double> _r = _t->getTranslation();
            if (_a[0]) *reinterpret_cast< QList<double>*>(_a[0]) = std::move(_r); }  break;
        case 5: _t->rotate((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3]))); break;
        case 6: _t->rotateByVector((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3]))); break;
        case 7: _t->rotateTo((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3]))); break;
        case 8: _t->translate((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3]))); break;
        case 9: _t->translateTo((*reinterpret_cast< double(*)>(_a[1])),(*reinterpret_cast< double(*)>(_a[2])),(*reinterpret_cast< double(*)>(_a[3]))); break;
        case 10: _t->zoom((*reinterpret_cast< double(*)>(_a[1]))); break;
        case 11: _t->zoomTo((*reinterpret_cast< double(*)>(_a[1]))); break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject OpenSCADAdaptor::staticMetaObject = { {
    &QDBusAbstractAdaptor::staticMetaObject,
    qt_meta_stringdata_OpenSCADAdaptor.data,
    qt_meta_data_OpenSCADAdaptor,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *OpenSCADAdaptor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OpenSCADAdaptor::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OpenSCADAdaptor.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractAdaptor::qt_metacast(_clname);
}

int OpenSCADAdaptor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractAdaptor::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 12)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 12;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 12)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 12;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
