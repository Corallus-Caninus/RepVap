// Generated by SolidPython 1.0.4 on 2020-12-30 06:10:35


difference(){
	union() {
		difference() {
			rotate_extrude($fn = 200, angle = 83.9293645211, convexity = 1) {
				translate(v = [102.4000000000, 0, 0]) {
					square(size = 12.3000000000);
				}
			}
		}
		translate(v = [0, 0, 4.5000000000]) {
			rotate_extrude($fn = 200, angle = 83.9293645211, convexity = 1) {
				polygon(points = [[104.6500000000, 15.8000000000], [102.4000000000, 7.8000000000], [114.7000000000, 7.8000000000], [112.4500000000, 15.8000000000]]);
			}
		}
		rotate(a = [0, 0, 0.8096705585]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 2.4291734208]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 4.0486762830]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 5.6681791453]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 7.2876820075]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 8.9071848698]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 10.5266877321]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 12.1461905943]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 13.7656934566]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 15.3851963189]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 17.0046991811]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 18.6242020434]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 20.2437049057]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 21.8632077679]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 23.4827106302]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 25.1022134924]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 26.7217163547]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 28.3412192170]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 29.9607220792]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 31.5802249415]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 33.1997278038]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 34.8192306660]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 36.4387335283]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 38.0582363905]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 39.6777392528]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 41.2972421151]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 42.9167449773]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 44.5362478396]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 46.1557507019]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 47.7752535641]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 49.3947564264]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 51.0142592886]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 52.6337621509]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 54.2532650132]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 55.8727678754]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 57.4922707377]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 59.1117736000]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 60.7312764622]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 62.3507793245]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 63.9702821867]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 65.5897850490]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 67.2092879113]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 68.8287907735]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 70.4482936358]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 72.0677964981]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 73.6872993603]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 75.3068022226]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 76.9263050849]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 78.5458079471]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 80.1653108094]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 81.7848136716]) {
			translate(v = [106.1500000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 0.7820412910]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 2.3462696154]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 3.9104979397]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 5.4747262640]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 7.0389545884]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 8.6031829127]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 10.1674112370]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 11.7316395613]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 13.2958678857]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 14.8600962100]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 16.4243245343]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 17.9885528587]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 19.5527811830]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 21.1170095073]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 22.6812378316]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 24.2454661560]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 25.8096944803]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 27.3739228046]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 28.9381511290]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 30.5023794533]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 32.0666077776]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 33.6308361019]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 35.1950644263]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 36.7592927506]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 38.3235210749]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 39.8877493992]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 41.4519777236]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 43.0162060479]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 44.5804343722]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 46.1446626966]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 47.7088910209]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 49.2731193452]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 50.8373476695]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 52.4015759939]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 53.9658043182]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 55.5300326425]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 57.0942609669]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 58.6584892912]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 60.2227176155]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 61.7869459398]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 63.3511742642]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 64.9154025885]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 66.4796309128]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 68.0438592372]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 69.6080875615]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 71.1723158858]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 72.7365442101]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 74.3007725345]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 75.8650008588]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 77.4292291831]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 78.9934575074]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 80.5576858318]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 82.1219141561]) {
			translate(v = [109.9000000000, 0, 0]) {
				translate(v = [0, 0, 7.8000000000]) {
					translate(v = [0, 0, 6.2500000000]) {
						difference() {
							cylinder($fn = 11, center = true, h = 8, r = 1.5000000000);
						}
					}
				}
			}
		}
		translate(v = [108.5500000000, 0, 6.1500000000]) {
			rotate(a = [90, 0, 0]) {
				union() {
					difference() {
						union() {
							cylinder($fn = 200, h = 7.8000000000, r = 4.8000000000);
							translate(v = [0, 0, 7.8000000000]) {
								cylinder($fn = 200, h = 7.8000000000, r1 = 5.7000000000, r2 = 3.9000000000);
							}
						}
					}
					scale(v = [12.3000000000, 12.3000000000, 2.2500000000]) {
						translate(v = [0, 0, 0.5000000000]) {
							cube(center = true, size = 1);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 83.9293645211]) {
			translate(v = [108.5500000000, 7.8000000000, 6.1500000000]) {
				rotate(a = [270, 0, 0]) {
					translate(v = [0, 0, -7.8000000000]) {
						scale(v = [12.3000000000, 12.3000000000, 2.2500000000]) {
							translate(v = [0, 0, 0.5000000000]) {
								cube(center = true, size = 1);
							}
						}
					}
				}
			}
		}
	}
	/* Holes Below*/
	union(){
		union(){
			rotate_extrude($fn = 200, angle = 83.9293645211, convexity = 1) {
				translate(v = [2.2500000000, 2.2500000000]) {
					translate(v = [102.4000000000, 0, 0]) {
						square(size = 7.8000000000);
					}
				}
			}
		}
		rotate(a = [0, 0, 0.8096705585]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 2.4291734208]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 4.0486762830]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 5.6681791453]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 7.2876820075]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 8.9071848698]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 10.5266877321]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 12.1461905943]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 13.7656934566]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 15.3851963189]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 17.0046991811]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 18.6242020434]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 20.2437049057]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 21.8632077679]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 23.4827106302]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 25.1022134924]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 26.7217163547]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 28.3412192170]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 29.9607220792]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 31.5802249415]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 33.1997278038]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 34.8192306660]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 36.4387335283]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 38.0582363905]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 39.6777392528]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 41.2972421151]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 42.9167449773]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 44.5362478396]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 46.1557507019]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 47.7752535641]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 49.3947564264]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 51.0142592886]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 52.6337621509]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 54.2532650132]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 55.8727678754]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 57.4922707377]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 59.1117736000]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 60.7312764622]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 62.3507793245]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 63.9702821867]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 65.5897850490]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 67.2092879113]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 68.8287907735]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 70.4482936358]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 72.0677964981]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 73.6872993603]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 75.3068022226]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 76.9263050849]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 78.5458079471]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 80.1653108094]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 81.7848136716]){
			translate(v = [106.1500000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 0.7820412910]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 2.3462696154]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 3.9104979397]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 5.4747262640]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 7.0389545884]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 8.6031829127]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 10.1674112370]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 11.7316395613]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 13.2958678857]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 14.8600962100]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 16.4243245343]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 17.9885528587]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 19.5527811830]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 21.1170095073]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 22.6812378316]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 24.2454661560]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 25.8096944803]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 27.3739228046]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 28.9381511290]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 30.5023794533]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 32.0666077776]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 33.6308361019]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 35.1950644263]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 36.7592927506]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 38.3235210749]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 39.8877493992]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 41.4519777236]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 43.0162060479]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 44.5804343722]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 46.1446626966]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 47.7088910209]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 49.2731193452]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 50.8373476695]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 52.4015759939]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 53.9658043182]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 55.5300326425]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 57.0942609669]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 58.6584892912]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 60.2227176155]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 61.7869459398]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 63.3511742642]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 64.9154025885]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 66.4796309128]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 68.0438592372]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 69.6080875615]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 71.1723158858]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 72.7365442101]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 74.3007725345]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 75.8650008588]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 77.4292291831]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 78.9934575074]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 80.5576858318]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		rotate(a = [0, 0, 82.1219141561]){
			translate(v = [109.9000000000, 0, 0]){
				translate(v = [0, 0, 7.8000000000]){
					translate(v = [0, 0, 6.2500000000]){
						union(){
							cylinder($fn = 11, center = true, h = 12.5000000000, r = 0.5000000000);
						}
					}
				}
			}
		}
		translate(v = [108.5500000000, 0, 6.1500000000]){
			rotate(a = [90, 0, 0]){
				union(){
					union(){
						cylinder($fn = 200, h = 15.6000000000, r = 3.9000000000);
					}
				}
			}
		}
	} /* End Holes */ 
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
# This is highest priority print

# TODO: pressure drop in intake and outlet nozzles isnt considered.
#       Should use outer diameter with a cinch screw.

# NOTE: consider 2d projections for printing a cut stencil guide
#       https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/3D_to_2D_Projection

# TODO: set set segments in header of render file instead of in geometry for production

# TODO: consider a snap hinge that pokes through inlet and outlet to hang from
#       bottom of lid with two small holes instead of large gash.

# TODO: consider pagoda nozzles that ramp from diameter to pagoda_thickness
#       then down to pagoda_thickness/2 or wall_thickness. this or screw down OD nozzles are critical
#       to pressure consistency and scalability. Just do pagoda, they work and will keep inner diameter

from math import *
import os
from solid import *
from solid.utils import *
import toml


def bucket_emitter_array(
        initial_radius, final_radius, nozzle_diameter, nozzle_wall_thickness,
        max_segment_size, drop_down_depth, tube_diameter, pagoda_thickness, wall_thickness):
    '''
    PARAMETERS:
        intial_radius:
            the radius of the fan.
        final_radius:
            the radius of the lid or area to be used for nozzles otherwise.
        nozzle_diameter:
            the diameter of the emitter nozzle.
        nozzle_wall_thickness:
            the thickness of the nozzle as it drops down into the bucket from the lid.
        max_segment_size:
            the arc length of the arc that is formed by each array.
        drop_down_depth:
            the depth the emitter will drop into the bucket.
        tube_diameter:
            the diameter of the tube
        wall_thickness:
            the thickness of the hull (everything except the nozzles).
        tube_wall_thickness:
            the thickness of the inlet and outlet nozzles, subtracted from the nozzle cylinder 
            (the larger the value the more constricted the flow)
    '''
    # Nonesense assertions:
    assert initial_radius < final_radius, "ERROR: did you enter the radius measurements backwards?"
    assert nozzle_diameter < tube_diameter, "ERROR: nozzles must divide the tubing!"
    # NOTE: insert assertions as geometry artifacts are
    #       found that are within build parameterization

    # calculate the number of concentric circles given the platter (lid)
    # This is a 1 dimension cross-section
    number_disks = int(
        (final_radius-initial_radius)/(tube_diameter + 2*wall_thickness))
    print("calculated " + str(number_disks) +
          " disks of tube_length to fill the platter.")
    # the tube diameter and both wall thicknesses is our array block's width.
    disk_minor_radius = initial_radius
    disk_major_radius = disk_minor_radius + tube_diameter + 2*wall_thickness
    total_nozzle_area = 0

    for index in range(0, number_disks):
        cur_nozzle_area = 0
        # offset the mean radius by the intial radius
        segment_radius = disk_minor_radius + \
            (disk_major_radius-disk_minor_radius)/2
        disk_circumference = 2*pi*segment_radius
        # calculate the number of segments, we assume tube is flexible enough that each segment will
        # only need spacing of tube_diameter to interconnect. tube connector nozzles will be length
        # of tube diameter. wall thickness is flange width
        num_segments = int(disk_circumference /
                           (max_segment_size + 3*tube_diameter + wall_thickness))

        print("constructing disk partition with radius " + str(segment_radius))
        disk_partition, cur_nozzle_area = build_disk_partition(
            segment_radius,
            drop_down_depth, nozzle_diameter, nozzle_wall_thickness,
            tube_diameter, max_segment_size, pagoda_thickness, wall_thickness)
        total_nozzle_area = total_nozzle_area + cur_nozzle_area*num_segments

        # check iteration but this should be performed on last to cap the array sequence
        # TODO: arc count is off
        if index+1 == number_disks:
            capped_disk_partition, cur_nozzle_area = build_disk_partition(
                segment_radius,
                drop_down_depth, nozzle_diameter, nozzle_wall_thickness,
                tube_diameter, max_segment_size, pagoda_thickness,
                wall_thickness, True)
            filename = "ENDCAP_x1" + "_nozzle_arc" + str(index+1)
            scad_render_to_file(capped_disk_partition, filename+".scad")
            os.system("start ../OpenSCAD/openscad.exe -o " +
                      filename + ".stl " + filename + ".scad")

            print("rendering.. " + str(index))
            filename = "x" + str(num_segments) + "_" + \
                "_nozzle_arc"+str(index)
            scad_render_to_file(disk_partition, filename+".scad")
            os.system("start ../OpenSCAD/openscad.exe -o " +
                      filename + ".stl " + filename + ".scad")
        else:
            print("rendering.. " + str(index))
            filename = "x" + str(num_segments) + "_" + \
                "_nozzle_arc"+str(index+1)
            scad_render_to_file(disk_partition, filename+".scad")
            os.system("start ../OpenSCAD/openscad.exe -o " +
                      filename + ".stl " + filename + ".scad")

        # iterate the disk to the next radii
        disk_minor_radius = disk_major_radius
        disk_major_radius = disk_minor_radius + tube_diameter + 2*wall_thickness

    # TODO: suggest a better final_radius to equate tube_diameter cross section.
    #       this should be a seperate program to keep this organized and direct.
    # features such as total_nozzle_area is already complicating the algorithms readability.
    tube_nozzle_differential = pi*(tube_diameter)**2 - total_nozzle_area
    print("GENERATION FINISHED.")
    print("Total nozzle area rendered: " + str(total_nozzle_area))
    print("Inlet to outlet area differential (proportional to pressure drop): " +
          str(tube_nozzle_differential))
    print("PLEASE WAIT WHILE OPENSCAD RENDERS THE MODELS..")


def build_disk_partition(segment_radius,
                         drop_down_depth, nozzle_diameter, nozzle_wall_thickness,
                         tube_diameter, max_segment_size, pagoda_thickness,
                         wall_thickness, final=False):
    '''
    builds a single array segment of a disk.
    '''
    # max_segment_size is the arch not the chord so we can use some high school trig

    # DISK SEGMENT HULL
    # calculate the radians swept by the segment_length and segment_radius
    sweep = degrees(max_segment_size/segment_radius)
    print("disk partition sweeping: " + str(sweep) + " degrees")
    # build array hull, square the circle that is the tube_diameter

    # NOTE: wall thickness is actually half here. change after working since
    #       relative to parameter just unintuitive.
    solid_hull = right(segment_radius)(square(tube_diameter+wall_thickness))
    hull = translate([wall_thickness/2, wall_thickness/2]
                     )(right(segment_radius)(square(tube_diameter)))

    solid_disk_partition = rotate_extrude(sweep, 1, segments=200)(solid_hull)
    disk_partition = rotate_extrude(sweep, 1, segments=200)(hull)
    disk_partition = solid_disk_partition - hole()(disk_partition)

    # EMITTER HULL #
    # frustrum with angle from wall_thickness to tube_diameter.
    # doesnt need to be offset since we can just offset x coords
    frustrum = polygon(
        [
            [segment_radius + wall_thickness/2, tube_diameter + drop_down_depth],
            [segment_radius, tube_diameter],
            [segment_radius + wall_thickness + tube_diameter, tube_diameter],
            [segment_radius + tube_diameter + wall_thickness/2, tube_diameter + drop_down_depth]])

    emitter_hull = up(wall_thickness)(
        rotate_extrude(sweep, 1, segments=200)(frustrum))
    disk_partition = disk_partition + emitter_hull

    # EMITTER NOZZLES #
    #       if this were a file system disk storage analogy these are the
    #       files/tables (pick one either work).
    #       place each nozzle seperated by nozzle_radius + nozzle_wall_thickness
    #       then linefeed and resweep at radius + nozzle_radius + nozzle_wall_thickness

    nozzle = cylinder(r=nozzle_diameter/2 + nozzle_wall_thickness, h=drop_down_depth, center=True, segments=11) - \
        hole()(cylinder(r=nozzle_diameter/2, h=drop_down_depth +
                        wall_thickness, center=True, segments=11))
    # have to shift up by half height since centered
    nozzle = up((drop_down_depth+wall_thickness)/2)(nozzle)
    # tap through to the main hull
    nozzle = up(tube_diameter)(nozzle)

    # calculate the number of nozzles that will fit on the current disk segment
    # 1-dimension cross-section analysis of how many nozzle sectors will fill the disk_segment

    num_nozzle_sectors = int(
        tube_diameter/(nozzle_diameter + 2*nozzle_wall_thickness))
    print("got " + str(num_nozzle_sectors) + " nozzle sectors")

    # TODO: clean this up
    init_sector_radius = segment_radius + wall_thickness/2 + \
        nozzle_wall_thickness + nozzle_diameter/2
    final_sector_radius = wall_thickness/2 + (ceil(num_nozzle_sectors/2))*(
        nozzle_wall_thickness + nozzle_diameter/2) + init_sector_radius
    print('init sector radius: {} final sector radius: {}'.format(
        init_sector_radius, final_sector_radius))
    print('got mean: {}'.format(num_nozzle_sectors/2))

    segment_nozzle_area = 0
    # TODO: why are we ceil /2 here? this is marginally wrong but just in stdout
    for _ in range(int(ceil(num_nozzle_sectors/2))):
        # the angle to iterate by
        # TODO: autorefactored function
        # TODO: segment_nozzle_area needs to be calculated for both symmetries

        # top symmetry
        print("generating top track symmetry...")
        disk_partition, _ = nozzle_track(
            nozzle_diameter, nozzle_wall_thickness, init_sector_radius,
            sweep, segment_nozzle_area, nozzle, disk_partition)

        # bottom symmetry
        print("generating bottom track symmetry...")
        disk_partition, segment_nozzle_area = nozzle_track(
            nozzle_diameter, nozzle_wall_thickness, final_sector_radius,
            sweep, segment_nozzle_area, nozzle, disk_partition)

        # TODO: fit is incorrect dude to floor div
        #       use a symmetric iterator about the middle
        # count from the start to halfway then iterate mirror twice about middle
        # just iterate half doing each side symmetrically
        init_sector_radius = init_sector_radius + \
            (nozzle_diameter + 2*nozzle_wall_thickness)
        final_sector_radius = final_sector_radius + \
            (nozzle_diameter + 2*nozzle_wall_thickness)

    # TUBING CONNECTORS #
    flange = cube(1, center=True)
    # offset to xy plane
    flange = up(1/2)(flange)
    # divide by 2 on thickness since holes are translated the same amount
    # (keep consistent convention)
    flange = scale([tube_diameter + wall_thickness,
                    tube_diameter + wall_thickness,
                    wall_thickness/2])(flange)

    # TODO: need to now consider 2*tube_diameter between arrays for fitting.
    # seperate heights for two cylinders that create the pagoda
    pagoda_nozzle_solid = up(tube_diameter)(cylinder(
        r2=tube_diameter/2, r1=tube_diameter/2 + pagoda_thickness, h=tube_diameter, segments=200))
    tube_nozzle_solid = cylinder(tube_diameter/2+pagoda_thickness/2, h=tube_diameter, segments=200)\
        + pagoda_nozzle_solid
    # now tap a hole through the center
    tube_nozzle = tube_nozzle_solid - \
        hole()(cylinder(tube_diameter/2, 2*tube_diameter, segments=200))

    # @DEPRECATED TEST AND CLOSE
    # tube_nozzle = cylinder(tube_diameter/2, tube_diameter+wall_thickness/2, segments=200) - \
    #     hole()(cylinder(tube_diameter/2 - tube_wall_thickness,
    #                     tube_diameter+wall_thickness/2, segments=200))

    tube_nozzle = tube_nozzle + flange

    # attach to either end of the array, using sweep and origin
    inlet_tube_nozzle = translate([(segment_radius + tube_diameter/2 + wall_thickness/2),
                                   0, tube_diameter/2 + wall_thickness/2])(rotate([90, 0, 0])(tube_nozzle))

    # add endcap or T junction and finish connectors
    if final:
        # mirror sweep of extrusion for the outlet_tube_nozzle
        outlet_tube_nozzle = rotate([0, 0, sweep])(
            translate([(segment_radius + tube_diameter/2 + wall_thickness/2),
                       tube_diameter, tube_diameter/2 + wall_thickness/2])
            (rotate([270, 0, 0])(down(tube_diameter)(flange))))

        disk_partition = (disk_partition + inlet_tube_nozzle) + \
            outlet_tube_nozzle
    else:
        outlet_tube_nozzle = rotate([0, 0, sweep])(
            translate([(segment_radius + tube_diameter/2 + wall_thickness/2),
                       tube_diameter, tube_diameter/2 + wall_thickness/2])
            (rotate([270, 0, 0])(down(tube_diameter)(tube_nozzle))))

        disk_partition = (disk_partition + inlet_tube_nozzle) + \
            outlet_tube_nozzle

    return disk_partition, segment_nozzle_area


def nozzle_track(nozzle_diameter, nozzle_wall_thickness, sector_radius, sweep, segment_nozzle_area, nozzle, disk_partition):
    # TODO: consider angling the nozzles if needing more
    #       initial entropy to chicken wire
    #        (should be chaotic enough with just chicken wire)
    # the angle to iterate by
    track_offset = degrees(
        asin((nozzle_diameter + 2*nozzle_wall_thickness)/sector_radius))
    print("iterating with angular offset " +
          str(track_offset) + " degrees")
    num_nozzles = int(sweep/track_offset)
    print("generating " + str(num_nozzles) + " on this track..")
    segment_nozzle_area = segment_nozzle_area + \
        num_nozzles*(pi*(nozzle_diameter/2)**2)
    # initial offset
    cur_offset = degrees(
        asin((nozzle_diameter/2 + nozzle_wall_thickness)/sector_radius))
    for _ in range(num_nozzles):
        cur_nozzle = rotate([0, 0, cur_offset])(
            translate([sector_radius, 0, 0])(nozzle))
        disk_partition = disk_partition + cur_nozzle
        cur_offset = cur_offset + track_offset

    return disk_partition, segment_nozzle_area


if __name__ == "__main__":
    config = toml.load("configuration.toml")
    bucket_emitter_array(**config)
 
 
************************************************/
