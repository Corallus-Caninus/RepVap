// Generated by SolidPython 1.0.4 on 2020-12-22 04:48:28


difference(){
	union() {
		translate(v = [0, 0, -5.5000000000]) {
			translate(v = [0, 3.1750000000, 0]) {
				cube(center = true, size = [4, 4, 11]);
			}
		}
		translate(v = [0, 0, 2.0000000000]) {
			cube(center = true, size = [4, 10.3500000000, 4]);
		}
		translate(v = [0, 0, -5.5000000000]) {
			translate(v = [0, -3.1750000000, 0]) {
				cube(center = true, size = [4, 4, 11]);
			}
		}
		translate(v = [0, 0, 4]) {
			translate(v = [0, -4, 0]) {
				cube(center = true, size = 4);
			}
		}
		translate(v = [0, 9.1750000000, 0]) {
			translate(v = [0, 0, 16.6600000000]) {
				difference() {
					rotate(a = [90, 0, 0]) {
						difference() {
							cylinder($fn = 50, h = 18.3500000000, r = 12.6600000000);
							cylinder($fn = 50, h = 18.3500000000, r = 10.6600000000);
						}
					}
					translate(v = [0, 0, 12.6600000000]) {
						cube(center = true, size = 29.3200000000);
					}
				}
			}
		}
		translate(v = [0, 0, 16.6600000000]) {
			difference() {
				sphere($fn = 50, r = 16.6600000000);
				sphere($fn = 50, r = 12.6600000000);
				translate(v = [0, 0, 16.6600000000]) {
					cube(center = true, size = 33.3200000000);
				}
				translate(v = [0, 135, 0]) {
					cylinder($fn = 50, center = true, h = 261.3200000000, r = 135);
				}
			}
		}
		difference() {
			union() {
				translate(v = [0, 0, 17.1600000000]) {
					difference() {
						cylinder(center = true, h = 1, r = 16.6600000000);
						cylinder(center = true, h = 1, r = 12.6600000000);
					}
				}
				translate(v = [0, 0, 17.6600000000]) {
					difference() {
						scale(v = [1, 1.0166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 18.6600000000]) {
					difference() {
						scale(v = [1, 1.0333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 19.6600000000]) {
					difference() {
						scale(v = [1, 1.0500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 20.6600000000]) {
					difference() {
						scale(v = [1, 1.0666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 21.6600000000]) {
					difference() {
						scale(v = [1, 1.0833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 22.6600000000]) {
					difference() {
						scale(v = [1, 1.1000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 23.6600000000]) {
					difference() {
						scale(v = [1, 1.1166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 24.6600000000]) {
					difference() {
						scale(v = [1, 1.1333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 25.6600000000]) {
					difference() {
						scale(v = [1, 1.1500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 26.6600000000]) {
					difference() {
						scale(v = [1, 1.1666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 27.6600000000]) {
					difference() {
						scale(v = [1, 1.1833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 28.6600000000]) {
					difference() {
						scale(v = [1, 1.2000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 29.6600000000]) {
					difference() {
						scale(v = [1, 1.2166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 30.6600000000]) {
					difference() {
						scale(v = [1, 1.2333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 31.6600000000]) {
					difference() {
						scale(v = [1, 1.2500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 32.6600000000]) {
					difference() {
						scale(v = [1, 1.2666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 33.6600000000]) {
					difference() {
						scale(v = [1, 1.2833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 34.6600000000]) {
					difference() {
						scale(v = [1, 1.3000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 35.6600000000]) {
					difference() {
						scale(v = [1, 1.3166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 36.6600000000]) {
					difference() {
						scale(v = [1, 1.3333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 37.6600000000]) {
					difference() {
						scale(v = [1, 1.3500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 38.6600000000]) {
					difference() {
						scale(v = [1, 1.3666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 39.6600000000]) {
					difference() {
						scale(v = [1, 1.3833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 40.6600000000]) {
					difference() {
						scale(v = [1, 1.4000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 41.6600000000]) {
					difference() {
						scale(v = [1, 1.4166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 42.6600000000]) {
					difference() {
						scale(v = [1, 1.4333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 43.6600000000]) {
					difference() {
						scale(v = [1, 1.4500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 44.6600000000]) {
					difference() {
						scale(v = [1, 1.4666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 45.6600000000]) {
					difference() {
						scale(v = [1, 1.4833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 46.6600000000]) {
					difference() {
						scale(v = [1, 1.5000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 47.6600000000]) {
					difference() {
						scale(v = [1, 1.5166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 48.6600000000]) {
					difference() {
						scale(v = [1, 1.5333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 49.6600000000]) {
					difference() {
						scale(v = [1, 1.5500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 50.6600000000]) {
					difference() {
						scale(v = [1, 1.5666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 51.6600000000]) {
					difference() {
						scale(v = [1, 1.5833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 52.6600000000]) {
					difference() {
						scale(v = [1, 1.6000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 53.6600000000]) {
					difference() {
						scale(v = [1, 1.6166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 54.6600000000]) {
					difference() {
						scale(v = [1, 1.6333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 55.6600000000]) {
					difference() {
						scale(v = [1, 1.6500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 56.6600000000]) {
					difference() {
						scale(v = [1, 1.6666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 57.6600000000]) {
					difference() {
						scale(v = [1, 1.6833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 58.6600000000]) {
					difference() {
						scale(v = [1, 1.7000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 59.6600000000]) {
					difference() {
						scale(v = [1, 1.7166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 60.6600000000]) {
					difference() {
						scale(v = [1, 1.7333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 61.6600000000]) {
					difference() {
						scale(v = [1, 1.7500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 62.6600000000]) {
					difference() {
						scale(v = [1, 1.7666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 63.6600000000]) {
					difference() {
						scale(v = [1, 1.7833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 64.6600000000]) {
					difference() {
						scale(v = [1, 1.8000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 65.6600000000]) {
					difference() {
						scale(v = [1, 1.8166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 66.6600000000]) {
					difference() {
						scale(v = [1, 1.8333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 67.6600000000]) {
					difference() {
						scale(v = [1, 1.8500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 68.6600000000]) {
					difference() {
						scale(v = [1, 1.8666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 69.6600000000]) {
					difference() {
						scale(v = [1, 1.8833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 70.6600000000]) {
					difference() {
						scale(v = [1, 1.9000000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 71.6600000000]) {
					difference() {
						scale(v = [1, 1.9166666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 72.6600000000]) {
					difference() {
						scale(v = [1, 1.9333333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 73.6600000000]) {
					difference() {
						scale(v = [1, 1.9500000000, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 74.6600000000]) {
					difference() {
						scale(v = [1, 1.9666666667, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
				translate(v = [0, 0, 75.6600000000]) {
					difference() {
						scale(v = [1, 1.9833333333, 1]) {
							cylinder(center = true, h = 2, r = 16.6600000000);
						}
					}
				}
			}
			translate(v = [0, 135, 0]) {
				cylinder($fn = 50, center = true, h = 261.3200000000, r = 135);
			}
		}
	}
	/* Holes Below*/
	union(){
		union(){
			union(){
				translate(v = [0, 0, 17.6600000000]){
					union(){
						scale(v = [1, 1.0166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 18.6600000000]){
					union(){
						scale(v = [1, 1.0333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 19.6600000000]){
					union(){
						scale(v = [1, 1.0500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 20.6600000000]){
					union(){
						scale(v = [1, 1.0666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 21.6600000000]){
					union(){
						scale(v = [1, 1.0833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 22.6600000000]){
					union(){
						scale(v = [1, 1.1000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 23.6600000000]){
					union(){
						scale(v = [1, 1.1166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 24.6600000000]){
					union(){
						scale(v = [1, 1.1333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 25.6600000000]){
					union(){
						scale(v = [1, 1.1500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 26.6600000000]){
					union(){
						scale(v = [1, 1.1666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 27.6600000000]){
					union(){
						scale(v = [1, 1.1833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 28.6600000000]){
					union(){
						scale(v = [1, 1.2000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 29.6600000000]){
					union(){
						scale(v = [1, 1.2166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 30.6600000000]){
					union(){
						scale(v = [1, 1.2333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 31.6600000000]){
					union(){
						scale(v = [1, 1.2500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 32.6600000000]){
					union(){
						scale(v = [1, 1.2666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 33.6600000000]){
					union(){
						scale(v = [1, 1.2833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 34.6600000000]){
					union(){
						scale(v = [1, 1.3000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 35.6600000000]){
					union(){
						scale(v = [1, 1.3166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 36.6600000000]){
					union(){
						scale(v = [1, 1.3333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 37.6600000000]){
					union(){
						scale(v = [1, 1.3500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 38.6600000000]){
					union(){
						scale(v = [1, 1.3666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 39.6600000000]){
					union(){
						scale(v = [1, 1.3833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 40.6600000000]){
					union(){
						scale(v = [1, 1.4000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 41.6600000000]){
					union(){
						scale(v = [1, 1.4166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 42.6600000000]){
					union(){
						scale(v = [1, 1.4333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 43.6600000000]){
					union(){
						scale(v = [1, 1.4500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 44.6600000000]){
					union(){
						scale(v = [1, 1.4666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 45.6600000000]){
					union(){
						scale(v = [1, 1.4833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 46.6600000000]){
					union(){
						scale(v = [1, 1.5000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 47.6600000000]){
					union(){
						scale(v = [1, 1.5166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 48.6600000000]){
					union(){
						scale(v = [1, 1.5333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 49.6600000000]){
					union(){
						scale(v = [1, 1.5500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 50.6600000000]){
					union(){
						scale(v = [1, 1.5666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 51.6600000000]){
					union(){
						scale(v = [1, 1.5833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 52.6600000000]){
					union(){
						scale(v = [1, 1.6000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 53.6600000000]){
					union(){
						scale(v = [1, 1.6166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 54.6600000000]){
					union(){
						scale(v = [1, 1.6333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 55.6600000000]){
					union(){
						scale(v = [1, 1.6500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 56.6600000000]){
					union(){
						scale(v = [1, 1.6666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 57.6600000000]){
					union(){
						scale(v = [1, 1.6833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 58.6600000000]){
					union(){
						scale(v = [1, 1.7000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 59.6600000000]){
					union(){
						scale(v = [1, 1.7166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 60.6600000000]){
					union(){
						scale(v = [1, 1.7333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 61.6600000000]){
					union(){
						scale(v = [1, 1.7500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 62.6600000000]){
					union(){
						scale(v = [1, 1.7666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 63.6600000000]){
					union(){
						scale(v = [1, 1.7833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 64.6600000000]){
					union(){
						scale(v = [1, 1.8000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 65.6600000000]){
					union(){
						scale(v = [1, 1.8166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 66.6600000000]){
					union(){
						scale(v = [1, 1.8333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 67.6600000000]){
					union(){
						scale(v = [1, 1.8500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 68.6600000000]){
					union(){
						scale(v = [1, 1.8666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 69.6600000000]){
					union(){
						scale(v = [1, 1.8833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 70.6600000000]){
					union(){
						scale(v = [1, 1.9000000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 71.6600000000]){
					union(){
						scale(v = [1, 1.9166666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 72.6600000000]){
					union(){
						scale(v = [1, 1.9333333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 73.6600000000]){
					union(){
						scale(v = [1, 1.9500000000, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 74.6600000000]){
					union(){
						scale(v = [1, 1.9666666667, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
				translate(v = [0, 0, 75.6600000000]){
					union(){
						scale(v = [1, 1.9833333333, 1]) {
							cylinder(center = true, h = 2, r = 12.6600000000);
						}
					}
				}
			}
		}
	} /* End Holes */ 
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
from solid import *
from solid.utils import *
from math import asin
import toml
import os

# TODO: move Openscad to a root project directory and edit render_object (also extract to library)


def Spill_Guard(container_radius, inlet_height, shroud_distance, radius, clip_gap, clip_depth, wall_thickness):
    # create the negation solutions
    # This is for scrubbing
    negate = cube((radius+wall_thickness)*2, center=True)
    # This is the simulated container
    # TODO: height is just large but not parametrically precise
    container = cylinder(container_radius, 2*(shroud_distance+inlet_height+radius+2*wall_thickness),
                         center=True, segments=50)

    # create hemisphere shell for catching water droplets
    catch_solid = sphere(radius+wall_thickness, segments=50)
    catch = sphere(radius, segments=50)
    catch = catch_solid - catch

    # remove the upper half
    catch = catch - up(radius+wall_thickness)(negate)
    # remove the front half
    catch = catch - forward(container_radius)(container)

    # set catch on xy plane
    catch = up(radius+wall_thickness)(catch)

    # cape about the outside past wall_thickness to catch high angle & velocity
    #       particles without pressure loss.
    # an eliptic cylinder with major radius iterating a given curve
    shroud = cylinder(radius+wall_thickness, 1, center=True) - \
        cylinder(radius, 1, center=True)
    shroud = up(0.5+radius+wall_thickness)(shroud)
    for it in range(1, int(shroud_distance)):
        # TODO: wall_thickness is deformed here and not consistent,
        #       removes wall_thickness percentage of major radius
        cur_shroud_solid = cylinder(radius+wall_thickness, h=2, center=True)
        cur_shroud_solid = scale([1, (int(shroud_distance)+it) /
                            int(shroud_distance), 1])(cur_shroud_solid)

        cur_shroud = cylinder(radius, h=2, center=True)
        cur_shroud = scale([1, (int(shroud_distance)+it) /
                            int(shroud_distance), 1])(cur_shroud)
        
        cur_shroud = cur_shroud_solid - hole()(cur_shroud)

        # move into position atop catch
        shroud += up(it+radius+wall_thickness)(cur_shroud)

    shroud = shroud - forward(container_radius)(container)

    # extra wall_thickness to seam the spout with the catch (marginally perfect fit)
    # TODO: increase spout distance, has a chance to align with bucket wall through tolerances
    #       TEST AND CLOSE
    spout = cylinder(radius, 4*wall_thickness + clip_gap, segments=50)
    spout = spout - cylinder(radius - wall_thickness/2,
                             4*wall_thickness + clip_gap, segments=50)

    negate = cube(2*radius+wall_thickness, center=True)

    spout = rotate([90, 0, 0])(spout)
    # remove the top of the spout to create a half pipe
    spout = spout - up(radius)(negate)

    spout = up(radius+wall_thickness)(spout)
    spout = forward(2*wall_thickness + clip_gap/2)(spout)

    # create clip slide-on fastener
    clip = cube([wall_thickness, wall_thickness, clip_depth], center=True)
    bridge = cube([wall_thickness, clip_gap+2*wall_thickness,
                   wall_thickness], center=True)
    # set bridge on xy plane
    bridge = up(wall_thickness/2)(bridge)

    far_clip = forward(clip_gap/2 + wall_thickness/2)(clip)
    far_clip = down(clip_depth/2)(far_clip)
    near_clip = back(clip_gap/2 + wall_thickness/2)(clip)
    near_clip = down(clip_depth/2)(near_clip)

    clip = far_clip + bridge + near_clip

    gusset = cube(wall_thickness, center=True)
    gusset = back(wall_thickness)(gusset)
    gusset = up(wall_thickness)(gusset)

    # return the solution
    gutter = clip + gusset + spout + catch + shroud
    return gutter


def render_object(render_object, filename):
    '''
    creates a .stl and .scad solution for the given solidpython OpenSCAD object
    PARAMETERS:
        render_object: the OpenSCAD object
        filename: a string for the file to be saved
    '''
    scad_render_to_file(render_object, filename + ".scad")
    # render with OpenSCAD
    print("Openscad is now rendering the solution..")
    os.system("start OpenSCAD/openscad.exe -o " +
              filename + ".stl " + filename + ".scad")


if __name__ == "__main__":
    config = toml.load("configuration.toml")
    gutter = Spill_Guard(**config)
    render_object(gutter, "gutter")
 
 
************************************************/
